require 'fileutils'
default_platform(:ios)

platform :ios do

  lane :learn do |options|

    tagNum = options[:version]
    podspecName = podspec_name

    # 修改版本号
    change_version(podspecName, tagNum)

    desc("删除由cocoapods生成的文件")
    hasPods = File.exist?("../Example/Pods")
    if  hasPods == true
        #FileUtils.rm_rf("../Example/Pods")
    end
    hasSpace = File.exist?("../Example/YHLCore.xcworkspace")
    if  hasSpace == true
        #FileUtils.rm_rf("../Example/YHLCore.xcworkspace")
    end
    hasPodfile = File.exist?("../Example/Podfile.lock")
    if  hasPodfile == true
        #FileUtils.rm_rf("../Example/Podfile.lock")
    end

    #system 'pod repo update yanghl'

    desc("重新生成项目")
    cocoapods( clean: true, podfile: "./Example/Podfile" )

   git_add(path: ".")
   git_commit(path: ".", message: "upgrade repo",allow_nothing_to_commit: true)

    push_to_git_remote(remote_branch: "master")
  end

end

def podspec_name
  podspecName = File.basename(File.expand_path("..", Dir.pwd), Dir.getwd)
  Dir.children("..").each{|x|
    fileName = x.sub!(/\..*/,"")
    if podspecName.casecmp? fileName
      podspecName = fileName
    end
  }
  podspecName
end


def change_version(podspecName, version)
  path = "../#{podspecName}.podspec"

  return unless File.exists? path

  lines = IO.readlines(path).map do |line|
    if line.include? "s.version          ="
      line = "    s.version          = '#{version}'"
    else
      line
    end
    end
      File.open(path, 'w') do |file|
      file.puts lines
  end
end

